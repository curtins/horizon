{"status":{"code":200,"http":"Fetched (ping) 200 2683 and parsed 1/9 entries","nextFetch":1505721,"entriesCountSinceLastMaintenance":1,"velocity":0.6,"popularity":4.024557400219075,"generatedIds":true,"period":2683,"lastFetch":1505719,"lastParse":1505719,"lastMaintenanceAt":1505668,"feed":"http://feeds.feedburner.com/symfony/blog"},"permalinkUrl":"http://symfony.com/blog/","standardLinks":{"alternate":[{"title":"Symfony Blog","rel":"alternate","href":"http://symfony.com/blog/","type":"text/html"}],"self":[{"title":"Symfony Blog","rel":"self","href":"http://feeds.feedburner.com/symfony/blog","type":"application/rss+xml"}],"hub":[{"title":"","rel":"hub","href":"http://pubsubhubbub.appspot.com/","type":"text/html"}]},"title":"Symfony Blog","updated":1505719080,"id":"symfony-blog-2017-9-18-7","items":[{"id":"http://symfony.com/blog/new-in-symfony-3-4-http-immutable-responses","published":1505719080,"updated":1505719080,"title":"New in Symfony 3.4: HTTP Immutable Responses","summary":"<div style=\"border-radius: 4px; float: right; margin-left: 15px; margin-bottom: 15px; width: 200px; background-color: #fff7c4; padding: 7px\">\n    <div style=\"float: left; padding-top: 3px; width: 50px;\">\n        <a href=\"https://github.com/twoleds\">\n            <img style=\"border-radius: 40px;\" height=\"40\" width=\"40\" src=\"https://avatars2.githubusercontent.com/u/614302\" alt=\"Jaroslav Kuba\">\n        </a>\n    </div>\n    <div style=\"float: left;\">\n        <p style=\"font-size: 80%; margin-bottom: 0; padding-bottom: 0\">\n            Contributed by <br>\n            <a href=\"https://github.com/twoleds\">Jaroslav Kuba</a> <br>\n            in <a href=\"https://github.com/symfony/symfony/pull/22932\">#22932</a>.\n        </p>\n    </div>\n    <div class=\"clear_fix\"></div>\n</div><p>Some of the traditional <a class=\"reference external\" href=\"https://symfony.com/doc/current/http_cache.html\">HTTP Cache</a> mechanisms are based on the browser\nsending HTTP requests to ask whether some specific resource changed since it was\nretrieved the first time. If the resource didn't change, the server returns an\nempty HTTP response with 304 status (Not Modified) and the browser can reuse it.</p>\n<p>However, in modern web applications is common to have resources that never change.\nFor example, when <a class=\"reference external\" href=\"https://symfony.com/doc/current/frontend.html\">using Webpack Encore to manage web assets</a>, you can enable\nversioning to include in each asset URL a hash that changes whenever the contents\nof that asset changes. In other words, it's safe to store that asset forever and\nalways reuse it without asking to the server.</p>\n<p>This technique is already used by popular services such as Facebook, which\nhelped them <a class=\"reference external\" href=\"https://code.facebook.com/posts/557147474482256/this-browser-tweak-saved-60-of-requests-to-facebook\">reduce static resource requests to their servers by 60%</a> and\nimproved page load times dramatically. In September 2017, IETF made this\ntechnique official thanks to the <a class=\"reference external\" href=\"https://tools.ietf.org/html/rfc8246\">RFC 8246</a> proposal and Symfony 3.4 will\ninclude support for it.</p>\n<p>In practice, immutable HTTP responses are created with the <code class=\"notranslate\">Cache-Control: immutable</code>\nheader, which can be combined with other cache options (e.g. make a response\nimmutable for 1 year: <code class=\"notranslate\">Cache-Control: max-age=31536000, immutable</code>). In\nSymfony 3.4, this setting is controlled with the new <code class=\"notranslate\">setImmutable(boolean $isImmutable)</code>\nand <code class=\"notranslate\">isImmutable()</code> methods of the <code class=\"notranslate\">Response</code> class. When setting multiple cache\noptions, use the <code class=\"notranslate\">immutable</code> option with the <code class=\"notranslate\">setCache()</code> method.</p>\n\n                <hr style=\"margin-bottom: 5px\" />\n                <div style=\"font-size: 90%\">\n                Be trained by <a href=\"https://training.sensiolabs.com/en/courses?q=symfony\">Symfony experts</a>\n                                - <a href=\"http://training.sensiolabs.com/en/courses?q=SF3C3&amp;from=09/18/2017&amp;to=09/19/2017\">2017-09-18</a> Paris\n                                - <a href=\"http://training.sensiolabs.com/en/courses?q=SF3C1&amp;from=09/25/2017&amp;to=09/26/2017\">2017-09-25</a> Cologne\n                                - <a href=\"http://training.sensiolabs.com/en/courses?q=SF3C1&amp;from=09/25/2017&amp;to=09/26/2017\">2017-09-25</a> Paris\n                                </div><img src=\"http://feeds.feedburner.com/~r/symfony/blog/~4/C14SbIX4Lng\" height=\"1\" width=\"1\" alt=\"\"/>","permalinkUrl":"http://feedproxy.google.com/~r/symfony/blog/~3/C14SbIX4Lng/new-in-symfony-3-4-http-immutable-responses","standardLinks":{"alternate":[{"title":"New in Symfony 3.4: HTTP Immutable Responses","rel":"alternate","href":"http://feedproxy.google.com/~r/symfony/blog/~3/C14SbIX4Lng/new-in-symfony-3-4-http-immutable-responses","type":"text/html"}],"replies":[{"title":"New in Symfony 3.4: HTTP Immutable Responses","rel":"replies","href":"http://symfony.com/blog/new-in-symfony-3-4-http-immutable-responses#comments-list","type":"text/html"}],"canonical":[{"title":"New in Symfony 3.4: HTTP Immutable Responses","rel":"canonical","href":"http://symfony.com/blog/new-in-symfony-3-4-http-immutable-responses","type":"text/html"}]},"actor":{"displayName":"Javier Eguiluz","id":"Javier Eguiluz"},"language":"en"}]}